---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Application: CSL ElasticBeanstalk environment template.'

Parameters:
  ParentVPCStack:
    Description: 'Stack name of parent VPC stack based on vpc/vpc-*azs.yaml template.'
    Type: String
  EnvironmentType:
    Description: Environment Type.
    Default: dev
    Type: String
    AllowedValues:
      - dev
      - qa
      - uat
      - sit
      - test
      - rc
      - preproduction
      - production
      - other
    ConstraintDescription: Specify the type of environment this instance will be used in.
  InstanceType:
    Description: Instance Type.
    Type: String
    Default: t2.small
    ConstraintDescription: 'The type of instance that CSL will run on eg. t2.small, m3.medium, etc'
  SSHKeyName:
    Description: SSH Key Name.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: 'The SSH key pair that is used for SSH to the instances.'
  HostedZoneId:
    Description: 'Hosted Zone Id for the Route53 domain to create the DNS entry.'
    Type: String
  HostedZoneDomainName:
    Description: 'Hosted Zone Name in Route53 domain to create the DNS entry.'
    Type: String
  POSURL:
    Description: OVC Client URL.
    Type: String
    Default: 'http://localhost:32040/index.html'
    ConstraintDescription: 'Specify the URL for the OVC Client. eg: http://localhost:32040/index.html'
  DBPATH:
    Description: Mongo URI.
    Type: String
    ConstraintDescription: 'Specify the URI for MongoDB. eg: mongodb://sample.ovcdemo.ovc/dbname'
  SWAGGERACCESS:
    Description: Is Swagger enabled.
    Type: String
    AllowedValues:
      - on
      - off
    Default: on
    ConstraintDescription: 'Specify whether Swagger API documentation is "on" or "off".'
  SERVERPORT:
    Description: CSL Client Port.
    Default: 3000
    Type: Number
    ConstraintDescription: The port the CSL Client runs on.
  CSLPATHPROTOCOL:
    Description: CSL Server Protocol.
    Default: http
    Type: String
    AllowedValues:
      - http
      - https
    ConstraintDescription: Specify the Protocol for the CSL Server.
  NewRelicLicenseKey:
    Description: NewRelic license key.
    Type: String
    Default: ''
  MinASGSize:
    Description: 'Minimum number of instances running'
    Type: Number
    Default: 1
  MaxASGSize:
    Description: 'Maximum number of instances running'
    Type: Number
    Default: 3
  SolutionStackName:
    Description: 'The solution stack used'
    Type: String
    Default: '64bit Amazon Linux 2016.09 v2.5.0 running Multi-container Docker 1.12.6 (Generic)'

Conditions:
  NewRelicKeyPresent: !Not
    - !Equals
      - ''
      - !Ref NewRelicLicenseKey

Resources:
  CSLServerEnvironment:
    Type: "AWS::ElasticBeanstalk::Environment"
    Properties:
      ApplicationName:
        'Fn::ImportValue': CSLApplication
      Description: CSL Server
      EnvironmentName: !Sub '${EnvironmentType}-csl'
      SolutionStackName: !Ref SolutionStackName
      OptionSettings:

        # Scaling Settings
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: !Ref MinASGSize
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: !Ref MaxASGSize
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: LoadBalanced
        - Namespace: aws:autoscaling:updatepolicy:rollingupdate
          OptionName: RollingUpdateEnabled
          Value: true
        - Namespace: aws:autoscaling:updatepolicy:rollingupdate
          OptionName: RollingUpdateType
          Value: Health

        # VPC Network Settings
        - Namespace: aws:ec2:vpc
          OptionName: VPCId
          Value:
            'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'
        - Namespace: aws:ec2:vpc
          OptionName: Subnets
          Value:
            'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetsAppPrivate'
        - Namespace: aws:ec2:vpc
          OptionName: ELBSubnets
          Value:
            'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetsPublic'
        - Namespace: aws:ec2:vpc
          OptionName: AssociatePublicIpAddress
          Value: true

        # Settings
        - Namespace: aws:elasticbeanstalk:healthreporting:system
          OptionName: SystemType
          Value: enhanced
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: SecurityGroups
          Value:
            'Fn::ImportValue': !Sub '${ParentVPCStack}-CSLSecurityGroup'

        # Environment Settings
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: ServiceRole
          Value:
            'Fn::ImportValue': ElasticBeanstalkSerivceRole
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value:
            'Fn::ImportValue': ElasticBeanstalkInstanceRoleInstanceProfile

          # ELB Settings
        - Namespace: aws:elb:loadbalancer
          OptionName: CrossZone
          Value: true

          # ELB Port 80
        - Namespace: aws:elb:listener
          OptionName: ListenerEnabled
          Value: false

          # ELB Port 3000
        - Namespace: aws:elb:listener:3000
          OptionName: ListenerEnabled
          Value: true
        - Namespace: aws:elb:listener:3000
          OptionName: InstanceProtocol
          Value: HTTP
        # - Namespace: aws:elb:listener:3008
        #   OptionName: InstanceProtocol
        #   Value: HTTP
        #
        #   # ELB Port 3007
        # - Namespace: aws:elb:listener:3007
        #   OptionName: ListenerEnabled
        #   Value: true
        # - Namespace: aws:elb:listener:3007
        #   OptionName: InstanceProtocol
        #   Value: HTTP

          # ELB Port 4500
        - Namespace: aws:elb:listener:4500
          OptionName: ListenerEnabled
          Value: true
        - Namespace: aws:elb:listener:4500
          OptionName: InstanceProtocol
          Value: HTTP

        - Namespace: aws:ec2:vpc
          OptionName: ELBScheme
          Value: internal

          # Scaling Settings
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: InstanceType
          Value: !Ref InstanceType
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: EC2KeyName
          Value: !Ref SSHKeyName

          # NewRelic Variables
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: NEW_RELIC_LICENSE_KEY
          Value: !If
            - NewRelicKeyPresent
            - !Ref NewRelicLicenseKey
            - !Ref 'AWS::NoValue'
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: NEW_RELIC_APP_NAME
          Value: !If
            - NewRelicKeyPresent
            - !Sub '${EnvironmentType}-csl'
            - !Ref 'AWS::NoValue'
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: NEW_RELIC_LOG
          Value: !If
            - NewRelicKeyPresent
            - '/var/log/newrelic_agent.log'
            - !Ref 'AWS::NoValue'

          # Environment Variables
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DB_PATH
          Value: !Ref DBPATH
        - Namespace: aws:elasticbeanstalk:application:environment # Why are there 2 DB paths?
          OptionName: dbPath
          Value: !Ref DBPATH
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: SWAGGER_ACCESS
          Value: !Ref SWAGGERACCESS
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: POS_URL
          Value: !Ref POSURL
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: POS_RETURN_PATH
          Value: !Join ['', [ 'https://', !Sub '${EnvironmentType}', ., !Ref 'HostedZoneDomainName', '/json/transaction/return']]
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: POS_CSL_TRAN_PATH
          Value: !Join ['', [ 'https://', !Sub '${EnvironmentType}', ., !Ref 'HostedZoneDomainName', '/json/transaction/createCSLTransaction']]
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: AUTH_PATH
          Value: !Join ['', [ 'https://', !Sub '${EnvironmentType}', ., !Ref 'HostedZoneDomainName', '/json/login/login']]
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: CLOSE_CSL_PATH
          Value: !Join ['', [ 'https://', !Sub '${EnvironmentType}', ., !Ref 'HostedZoneDomainName', '/json/transaction/closeCSL']]
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: SERVER_PATH
          Value: !Join ['', [!Ref 'CSLPATHPROTOCOL', '://', !Sub '${EnvironmentType}-csl', '.', !Ref 'HostedZoneDomainName', ':', !Ref SERVERPORT]]

      Tags:
        - Key: "Role"
          Value: "CSL"
        - Key: "Environment"
          Value: !Ref EnvironmentType
        - Key: "Project"
          Value:
            'Fn::ImportValue': !Sub '${ParentVPCStack}-ProjectName'
        - Key: LiveIdentifier
          Value:
            'Fn::ImportValue': !Sub '${ParentVPCStack}-LiveIdentifier'

  DNSRecord:
    Type: AWS::Route53::RecordSet
    DependsOn: CSLServerEnvironment
    Properties:
      HostedZoneId:
        !Ref 'HostedZoneId'
      Name: !Join ['', [!Sub '${EnvironmentType}-csl', ., !Ref 'HostedZoneDomainName']]
      Type: CNAME
      TTL: '60'
      ResourceRecords:
      - !GetAtt CSLServerEnvironment.EndpointURL
