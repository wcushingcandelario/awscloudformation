---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Dashboard environment template.'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'VPC Parent Stack'
      Parameters:
      - ParentVPCStack
    - Label:
        default: 'Environment Setup'
      Parameters:
      - EnvironmentType
      - ProjectName
      - InstanceType
      - SSHKeyName
    - Label:
        default: 'Environment Configuration'
      Parameters:
      - POSURL
      - SQLHOST
    ParameterLabels:
      EnvironmentType:
        default: "Specify the type of environment this instance will be used in."
      POSURL:
        default: "Specify the URL for the OVC server. eg: http://devmysql.ovcdemo.com:8080"
      SQLHOST:
        default: "Specify the URL for the MongoDB connection.  eg: mongodb://mongodb.ovcdemo.ovc/dbname"

Parameters:
  ParentVPCStack:
    Description: 'Stack name of parent VPC stack based on vpc/vpc-*azs.yaml template.'
    Type: String
  EnvironmentType:
    Description: Environment Type.
    Default: dev
    Type: String
    AllowedValues:
      - dev
      - qa
      - uat
      - sit
      - test
      - rc
      - preproduction
      - production
      - other
    ConstraintDescription: Specify the type of environment this instance will be used in.
  InstanceType:
    Description: Instance Type.
    Type: String
    Default: t2.small
    ConstraintDescription: 'The type of instance that the Dashboard  will run on eg. t2.small, m3.medium, etc'
  SSHKeyName:
    Description: SSH Key Name.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: 'The SSH key pair that is used for SSH to the instances.'
  POSURL:
    Description: OVC Server URL.
    Default: https://sample.ovcdemo.com
    Type: String
    ConstraintDescription: Specify the URL for the OVC server.
  SQLHOST:
    Description: MySQL URL.
    Type: String
    ConstraintDescription: Specify the URL for MySQL.
  SQLDB:
    Description: MySQL Database.
    Type: String
    ConstraintDescription: Specify the database for MySQL.
  SQLPASSWORD:
    Description: MySQL Database Password.
    Type: String
    ConstraintDescription: Specify the password for MySQL.
  SQLUSER:
    Description: MySQL Database user.
    Type: String
    ConstraintDescription: Specify the user for MySQL.
  NewRelicLicenseKey:
    Description: NewRelic license key.
    Type: String
    Default: ''
  MinASGSize:
    Description: 'Minimum number of instances running'
    Type: Number
    Default: 1
  MaxASGSize:
    Description: 'Maximum number of instances running'
    Type: Number
    Default: 3
  HostedZoneId:
    Description: 'The Hosted Zone ID used to create Record Sets (URLs)'
    Type: String
  HostedZoneDomainName:
    Description: 'The Domain Name with extension used to create Record Sets (URLs). eg: ovcdemo.com'
    Type: String
  SolutionStackName:
    Description: 'The solution stack used'
    Type: String
    Default: '64bit Amazon Linux 2016.09 v2.5.0 running Multi-container Docker 1.12.6 (Generic)'
  DEBUG:
    Description: The DEBUG variable
    Type: String
    Default: 1

Conditions:
  NewRelicKeyPresent: !Not
    - !Equals
      - ''
      - !Ref NewRelicLicenseKey

Resources:
  DashboardEnvironment:
    Type: "AWS::ElasticBeanstalk::Environment"
    Properties:
      ApplicationName:
        'Fn::ImportValue': DashboardApplication
      Description: Dashboard
      EnvironmentName: !Sub '${EnvironmentType}-dashboard'
      SolutionStackName: !Ref SolutionStackName
      TemplateName:
        'Fn::ImportValue': !Sub '${ParentVPCStack}-DashboardConfigurationTemplate'
      OptionSettings:

        # Scaling Settings
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: !Ref MinASGSize
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: !Ref MaxASGSize
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: LoadBalanced
        - Namespace: aws:autoscaling:updatepolicy:rollingupdate
          OptionName: RollingUpdateEnabled
          Value: true
        - Namespace: aws:autoscaling:updatepolicy:rollingupdate
          OptionName: RollingUpdateType
          Value: Health

        # VPC Network Settings
        - Namespace: aws:ec2:vpc
          OptionName: VPCId
          Value:
            'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'
        - Namespace: aws:ec2:vpc
          OptionName: Subnets
          Value:
            'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetsAppPrivate'
        - Namespace: aws:ec2:vpc
          OptionName: ELBSubnets
          Value:
            'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetsPublic'
        - Namespace: aws:ec2:vpc
          OptionName: AssociatePublicIpAddress
          Value: false

        # Settings
        - Namespace: aws:elasticbeanstalk:healthreporting:system
          OptionName: SystemType
          Value: enhanced
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: SecurityGroups
          Value:
            'Fn::ImportValue': !Sub '${ParentVPCStack}-POSServerSecurityGroup'

        # Environment Settings
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: ServiceRole
          Value:
            'Fn::ImportValue': ElasticBeanstalkSerivceRole
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value:
            'Fn::ImportValue': ElasticBeanstalkInstanceRoleInstanceProfile

          # ELB Settings
        - Namespace: aws:elb:loadbalancer
          OptionName: CrossZone
          Value: true

        - Namespace: aws:ec2:vpc
          OptionName: ELBScheme
          Value: internal

          # Scaling Settings
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: InstanceType
          Value: !Ref InstanceType
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: EC2KeyName
          Value: !Ref SSHKeyName

          # NewRelic Variables
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: NEW_RELIC_LICENSE_KEY
          Value: !If
            - NewRelicKeyPresent
            - !Ref NewRelicLicenseKey
            - !Ref 'AWS::NoValue'
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: NEW_RELIC_APP_NAME
          Value: !If
            - NewRelicKeyPresent
            - !Sub '${EnvironmentType}-dash'
            - !Ref 'AWS::NoValue'
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: NEW_RELIC_LOG
          Value: !If
            - NewRelicKeyPresent
            - '/var/log/newrelic_agent.log'
            - !Ref 'AWS::NoValue'

          # Environment Variables
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: SQL_HOST
          Value: !Ref SQLHOST
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: SQL_DB
          Value: !Ref SQLDB
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: SQL_USER
          Value: !Ref SQLUSER
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: SQL_PASSWORD
          Value: !Ref SQLPASSWORD
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: POS_URL
          Value: !Ref POSURL
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DEBUG
          Value: !Ref DEBUG

      Tags:
        - Key: "Role"
          Value: "Dashboard"
        - Key: "Environment"
          Value: !Ref EnvironmentType
        - Key: "Project"
          Value:
            'Fn::ImportValue': !Sub '${ParentVPCStack}-ProjectName'
        - Key: LiveIdentifier
          Value:
            'Fn::ImportValue': !Sub '${ParentVPCStack}-LiveIdentifier'

  DNSRecord:
    Type: AWS::Route53::RecordSet
    DependsOn: DashboardEnvironment
    Properties:
      HostedZoneId:
        !Ref 'HostedZoneId'
      Name: !Join ['', [!Sub '${EnvironmentType}-dash', ., !Ref 'HostedZoneDomainName']]
      Type: CNAME
      TTL: '60'
      ResourceRecords:
      - !GetAtt DashboardEnvironment.EndpointURL
