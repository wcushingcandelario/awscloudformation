---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Security group configuration for OneView Commerce POS Server'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'VPC Parent Stack'
      Parameters:
      - ParentVPCStack
Parameters:
  ParentVPCStack:
    Description: 'Stack name of parent VPC stack based on vpc/vpc-*azs.yaml template.'
    Type: String
Conditions:
  IsProduction: !Equals [ !Sub '${ParentVPCStack}-LiveIdentifier', production ]

Resources:

# POS Load Balancer

  cfPOSLoadBalancerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'ELB to POS Server load balancer security group'
      VpcId:
        'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'
      Tags:
      - Key: Name
        Value:  cfPOSLoadBalancerSecurityGroup
      - Key: Project
        Value:
          'Fn::ImportValue': !Sub '${ParentVPCStack}-ProjectName'
      - Key: LiveIdentifier
        Value:
          'Fn::ImportValue': !Sub '${ParentVPCStack}-LiveIdentifier'
      SecurityGroupIngress:
      -
        FromPort: 443
        ToPort: 443
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref cfPromotionEngineSecurityGroup
      -
        FromPort: 443
        ToPort: 443
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref InventoryManagerSecurityGroup
      -
        FromPort: 443
        ToPort: 443
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref CSLSecurityGroup

  POStoLoadBalancer:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref cfPOSLoadBalancerSecurityGroup
      FromPort: 443
      ToPort: 443
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref cfPOSServerSecurityGroup

# POS Server

  cfPOSServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'POS Jetty Server security group'
      VpcId:
        'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'
      Tags:
      - Key: Name
        Value: cfPOSServerSecurityGroup
      - Key: Project
        Value:
          'Fn::ImportValue': !Sub '${ParentVPCStack}-ProjectName'
      - Key: LiveIdentifier
        Value:
          'Fn::ImportValue': !Sub '${ParentVPCStack}-LiveIdentifier'
      SecurityGroupIngress:
      -
        FromPort: 443
        ToPort: 443
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref  cfPOSLoadBalancerSecurityGroup
      -
        FromPort: 80
        ToPort: 80
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref  cfPOSLoadBalancerSecurityGroup
      -
        FromPort: 8080
        ToPort: 8080
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref  cfPOSLoadBalancerSecurityGroup
      -
        FromPort: 22
        ToPort: 22
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref cfBastionHostSecurityGroup

# Promotion Engine - Empty group to allow MongoDB Security Group Ingress
  cfPromotionEngineSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Promotion Engine security group'
      VpcId:
        'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'
      Tags:
      - Key: Name
        Value: cfPromotionEngineSecurityGroup
      - Key: Project
        Value:
          'Fn::ImportValue': !Sub '${ParentVPCStack}-ProjectName'
      - Key: LiveIdentifier
        Value:
          'Fn::ImportValue': !Sub '${ParentVPCStack}-LiveIdentifier'
      SecurityGroupIngress:
      -
        FromPort: 22
        ToPort: 22
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref cfBastionHostSecurityGroup

# Inventory Manager - Empty group to allow MongoDB Security Group Ingress
  InventoryManagerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Inventory Manager security group'
      VpcId:
        'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'
      Tags:
      - Key: Name
        Value: InventoryManagerSecurityGroup
      - Key: Project
        Value:
          'Fn::ImportValue': !Sub '${ParentVPCStack}-ProjectName'
      - Key: LiveIdentifier
        Value:
          'Fn::ImportValue': !Sub '${ParentVPCStack}-LiveIdentifier'
      SecurityGroupIngress:
      -
        FromPort: 22
        ToPort: 22
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref cfBastionHostSecurityGroup

  CSLSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'CSL security group'
      VpcId:
        'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'
      Tags:
      - Key: Name
        Value: CSLSecurityGroup
      - Key: Project
        Value:
          'Fn::ImportValue': !Sub '${ParentVPCStack}-ProjectName'
      - Key: LiveIdentifier
        Value:
          'Fn::ImportValue': !Sub '${ParentVPCStack}-LiveIdentifier'
      SecurityGroupIngress:
      -
        FromPort: 22
        ToPort: 22
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref cfBastionHostSecurityGroup


# MongoDB Cloud Manager

  cfMongoDBCloudManagerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'MongoDB Server security group'
      VpcId:
        'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'
      Tags:
      - Key: Name
        Value: cfMongoDBCloudManagerSecurityGroup
      - Key: Project
        Value:
          'Fn::ImportValue': !Sub '${ParentVPCStack}-ProjectName'
      - Key: LiveIdentifier
        Value:
          'Fn::ImportValue': !Sub '${ParentVPCStack}-LiveIdentifier'
      SecurityGroupIngress:
      -
        FromPort: 27000
        ToPort: 27020
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref cfPOSServerSecurityGroup
      -
        FromPort: 27000
        ToPort: 27020
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref cfPromotionEngineSecurityGroup
      -
        FromPort: 27000
        ToPort: 27020
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref InventoryManagerSecurityGroup
      -
        FromPort: 27000
        ToPort: 27020
        IpProtocol: tcp
        SourceSecurityGroupId: !Ref CSLSecurityGroup
      -
        FromPort: 22
        ToPort: 22
        IpProtocol: tcp
        CidrIp: '4.71.186.128/25'
      -
        FromPort: 22
        ToPort: 22
        IpProtocol: tcp
        CidrIp: '4.35.16.128/25'

  MongoCloudManagerInternalInbound:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: cfMongoDBCloudManagerSecurityGroup
    Properties:
      GroupId: !Ref cfMongoDBCloudManagerSecurityGroup
      IpProtocol: tcp
      FromPort: 27000
      ToPort: 27020
      SourceSecurityGroupId: !Ref cfMongoDBCloudManagerSecurityGroup

# Bastion Host

  cfBastionHostSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Bastion host security group'
      VpcId:
        'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'
      Tags:
      - Key: Name
        Value: cfBastionHostSecurityGroup
      - Key: Project
        Value:
          'Fn::ImportValue': !Sub '${ParentVPCStack}-ProjectName'
      - Key: LiveIdentifier
        Value:
          'Fn::ImportValue': !Sub '${ParentVPCStack}-LiveIdentifier'
      SecurityGroupIngress:
      -
        FromPort: 22
        ToPort: 22
        IpProtocol: tcp
        CidrIp: '192.168.0.0/16'
      -
        FromPort: 22
        ToPort: 22
        IpProtocol: tcp
        CidrIp: '38.122.253.250/32'

Outputs:
  POSLoadBalancerSecurityGroup:
    Description: POS Load Balancer Security Group
    Value: !Ref cfPOSLoadBalancerSecurityGroup
    Export:
      Name: !Sub '${ParentVPCStack}-POSLoadBalancerSecurityGroup'
  POSServerSecurityGroup:
    Description: POS Server Security Group
    Value: !Ref cfPOSServerSecurityGroup
    Export:
      Name: !Sub '${ParentVPCStack}-POSServerSecurityGroup'
  MongoDBCloudManagerSecurityGroup:
    Description: MongoDB Cloud Manager Security Group
    Value: !Ref cfMongoDBCloudManagerSecurityGroup
    Export:
      Name: !Sub '${ParentVPCStack}-MongoDBCloudManagerSecurityGroup'
  PromotionEngineSecurityGroup:
    Description: Promotion Engine Instance Security Group
    Value: !Ref cfPromotionEngineSecurityGroup
    Export:
      Name: !Sub '${ParentVPCStack}-PromotionEngineSecurityGroup'
  InventoryManagerSecurityGroup:
    Description: Inventory Manager Instance Security Group
    Value: !Ref InventoryManagerSecurityGroup
    Export:
      Name: !Sub '${ParentVPCStack}-InventoryManagerSecurityGroup'
  CSLSecurityGroup:
    Description: CSL Instance Security Group
    Value: !Ref CSLSecurityGroup
    Export:
      Name: !Sub '${ParentVPCStack}-CSLSecurityGroup'
  BastionHostSecurityGroup:
    Description: Bastion Host Security Group
    Value: !Ref cfBastionHostSecurityGroup
    Export:
      Name: !Sub '${ParentVPCStack}-BastionHostSecurityGroup'
